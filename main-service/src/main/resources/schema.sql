CREATE TABLE IF NOT EXISTS category
(
    id      BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    -- TODO UNIQUE ?
    name    VARCHAR(50) NOT NULL
);


CREATE TABLE IF NOT EXISTS compilation
(
    id      BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    pinned  BOLLEAN,
    title   VARCHAR(255)
);

CREATE TABLE IF NOT EXISTS users
(
    id      BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name    VARCHAR(255) NOT NULL,
    email   VARCHAR(255) NOT NULL UNIQUE
    );

CREATE TABLE IF NOT EXISTS events
(
    id          BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    annotation VARCHAR(2000),
    category_id INTEGER REFERENCES category(id) ON DELETE CASCADE,
    confirmed_requests BIGINT,
    description VARCHAR(7000),
    event_date TIMESTAMP WITHOUT TIME ZONE,
    --created_on TIMESTAMP WITHOUT TIME ZONE,
    initiator_id INTEGER REFERENCES users(id) ON DELETE CASCADE,
    location_id INTEGER REFERENCES location(id) ON DELETE CASCADE,
    paid BOOLEAN,
    participant_limit BIGINT,
    published_on TIMESTAMP WITHOUT TIME ZONE,
    request_moderation BOOLEAN,
    state VARCHAR(50),
    title VARCHAR(120),
    views BIGINT
    );

CREATE TABLE IF NOT EXISTS requests
(
    id          BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    created TIMESTAMP WITHOUT TIME ZONE,
    event INTEGER REFERENCES event(id) ON DELETE CASCADE NOT NULL,
    requester INTEGER REFERENCES user(id) ON DELETE CASCADE NOT NULL,
    status varchar(25) NOT NULL
    );

CREATE TABLE IF NOT EXISTS compilation_event
(
    compilation_id INTEGER REFERENCES compilation(id) ON DELETE CASCADE NOT NULL,
    event_id INTEGER REFERENCES event(id) ON DELETE CASCADE NOT NULL,
    PRIMARY KEY (compilation_id, event_id)
    );

-- TODO
CREATE TABLE IF NOT EXISTS location
(
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    lat FLOAT NOT NULL,
    lon FLOAT NOT NULL
);


